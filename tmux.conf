# True color
set-option -g default-shell /usr/bin/zsh

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Use mouse
set -g mouse on

# Stops the delay inside vim when switching between NORMAL and INSERT mode
set -sg escape-time 10

# Set prefix to 'Control-d'
unbind C-b
unbind C-d
set -g prefix C-d

# Split pane using 'v' and 's'
unbind '"'
unbind %
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Close pane on Ctrl-W
unbind x
bind -n C-w kill-pane

# Move between panes using Alt+arrow
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-Left' if-shell "$is_vim" 'send-keys M-Left'  'select-pane -L'
bind-key -n 'M-Down' if-shell "$is_vim" 'send-keys M-Down'  'select-pane -D'
bind-key -n 'M-Up' if-shell "$is_vim" 'send-keys M-Up'  'select-pane -U'
bind-key -n 'M-Right' if-shell "$is_vim" 'send-keys M-Right'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-Left' select-pane -L
bind-key -T copy-mode-vi 'M-Down' select-pane -D
bind-key -T copy-mode-vi 'M-Up' select-pane -U
bind-key -T copy-mode-vi 'M-Right' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# New tab using 'Control-t'
unbind c
bind -n C-t new-window

# Cycle through tabs
bind -n C-S-Right next-window
bind -n C-S-Left previous-window

# Reload config using 'r'
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Status bar
set -g status-justify centre
set -g status-fg green
set -g status-bg black

# Show " @@@ " highlighted when prefix has been pressed
set -g status-left '#{?client_prefix,#[reverse] @@@ #[noreverse],     }'

# Show time
set -g status-right '%H:%M'

#	#{==:#W,zsh} -> performs a string comparison. If the window_name (#W) is
# 	equal to zsh, return 1.
#	Show directory if window_name is zsh, otherwise show window_name
set -g window-status-format '\
	#{?#{==:#W,zsh},\
		#{b:pane_current_path},\
		#W}'

# Does the same thing as the last one, but also highlights it.
set -g window-status-current-format '\
	#[fg=yellow][\
	#{?#{==:#W,zsh},\
		#{b:pane_current_path},\
		#W}]'

set -g status-interval 1
